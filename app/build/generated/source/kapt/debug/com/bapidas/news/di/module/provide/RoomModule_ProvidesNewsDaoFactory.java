// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.di.module.provide;

import com.bapidas.news.data.db.AppDatabase;
import com.bapidas.news.data.db.dao.NewsArticlesDao;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvidesNewsDaoFactory implements Factory<NewsArticlesDao> {
  private final RoomModule module;

  private final Provider<AppDatabase> appDatabaseProvider;

  public RoomModule_ProvidesNewsDaoFactory(RoomModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    this.module = module;
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public NewsArticlesDao get() {
    return providesNewsDao(module, appDatabaseProvider.get());
  }

  public static RoomModule_ProvidesNewsDaoFactory create(RoomModule module,
      Provider<AppDatabase> appDatabaseProvider) {
    return new RoomModule_ProvidesNewsDaoFactory(module, appDatabaseProvider);
  }

  public static NewsArticlesDao providesNewsDao(RoomModule instance, AppDatabase appDatabase) {
    return Preconditions.checkNotNull(instance.providesNewsDao(appDatabase), "Cannot return null from a non-@Nullable @Provides method");
  }
}
