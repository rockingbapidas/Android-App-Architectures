// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.di.module.provide;

import android.app.Application;
import com.bapidas.news.data.db.AppDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvidesAppDatabaseFactory implements Factory<AppDatabase> {
  private final RoomModule module;

  private final Provider<Application> applicationProvider;

  public RoomModule_ProvidesAppDatabaseFactory(RoomModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public AppDatabase get() {
    return providesAppDatabase(module, applicationProvider.get());
  }

  public static RoomModule_ProvidesAppDatabaseFactory create(RoomModule module,
      Provider<Application> applicationProvider) {
    return new RoomModule_ProvidesAppDatabaseFactory(module, applicationProvider);
  }

  public static AppDatabase providesAppDatabase(RoomModule instance, Application application) {
    return Preconditions.checkNotNull(instance.providesAppDatabase(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
