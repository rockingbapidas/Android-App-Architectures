// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.ui.base.activity;

import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivityModule_Companion_ProvideViewModelProviderFactory implements Factory<ViewModelProvider> {
  private final Provider<AppCompatActivity> activityProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public BaseActivityModule_Companion_ProvideViewModelProviderFactory(
      Provider<AppCompatActivity> activityProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.activityProvider = activityProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  @Override
  public ViewModelProvider get() {
    return provideViewModelProvider(activityProvider.get(), viewModelFactoryProvider.get());
  }

  public static BaseActivityModule_Companion_ProvideViewModelProviderFactory create(
      Provider<AppCompatActivity> activityProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new BaseActivityModule_Companion_ProvideViewModelProviderFactory(activityProvider, viewModelFactoryProvider);
  }

  public static ViewModelProvider provideViewModelProvider(AppCompatActivity activity,
      ViewModelProvider.Factory viewModelFactory) {
    return Preconditions.checkNotNull(BaseActivityModule.Companion.provideViewModelProvider(activity, viewModelFactory), "Cannot return null from a non-@Nullable @Provides method");
  }
}
