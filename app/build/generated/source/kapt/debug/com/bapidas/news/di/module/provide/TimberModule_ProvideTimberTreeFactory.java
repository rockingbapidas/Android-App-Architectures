// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.di.module.provide;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import timber.log.Timber;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TimberModule_ProvideTimberTreeFactory implements Factory<Timber.Tree> {
  private final TimberModule module;

  public TimberModule_ProvideTimberTreeFactory(TimberModule module) {
    this.module = module;
  }

  @Override
  public Timber.Tree get() {
    return provideTimberTree(module);
  }

  public static TimberModule_ProvideTimberTreeFactory create(TimberModule module) {
    return new TimberModule_ProvideTimberTreeFactory(module);
  }

  public static Timber.Tree provideTimberTree(TimberModule instance) {
    return Preconditions.checkNotNull(instance.provideTimberTree(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
