// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.di.module.provide;

import com.bapidas.news.data.db.dao.NewsArticlesDao;
import com.bapidas.news.data.repository.NewsRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideNewsRepositoryFactory implements Factory<NewsRepository> {
  private final ApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  private final Provider<NewsArticlesDao> newsArticlesDaoProvider;

  public ApiModule_ProvideNewsRepositoryFactory(ApiModule module,
      Provider<Retrofit> retrofitProvider, Provider<NewsArticlesDao> newsArticlesDaoProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
    this.newsArticlesDaoProvider = newsArticlesDaoProvider;
  }

  @Override
  public NewsRepository get() {
    return provideNewsRepository(module, retrofitProvider.get(), newsArticlesDaoProvider.get());
  }

  public static ApiModule_ProvideNewsRepositoryFactory create(ApiModule module,
      Provider<Retrofit> retrofitProvider, Provider<NewsArticlesDao> newsArticlesDaoProvider) {
    return new ApiModule_ProvideNewsRepositoryFactory(module, retrofitProvider, newsArticlesDaoProvider);
  }

  public static NewsRepository provideNewsRepository(ApiModule instance, Retrofit retrofit,
      NewsArticlesDao newsArticlesDao) {
    return Preconditions.checkNotNull(instance.provideNewsRepository(retrofit, newsArticlesDao), "Cannot return null from a non-@Nullable @Provides method");
  }
}
