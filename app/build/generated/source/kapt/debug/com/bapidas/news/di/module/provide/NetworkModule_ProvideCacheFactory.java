// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.di.module.provide;

import android.app.Application;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.Cache;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideCacheFactory implements Factory<Cache> {
  private final NetworkModule module;

  private final Provider<Application> applicationProvider;

  public NetworkModule_ProvideCacheFactory(NetworkModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Cache get() {
    return provideCache(module, applicationProvider.get());
  }

  public static NetworkModule_ProvideCacheFactory create(NetworkModule module,
      Provider<Application> applicationProvider) {
    return new NetworkModule_ProvideCacheFactory(module, applicationProvider);
  }

  public static Cache provideCache(NetworkModule instance, Application application) {
    return Preconditions.checkNotNull(instance.provideCache(application), "Cannot return null from a non-@Nullable @Provides method");
  }
}
