// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.di.module.provide;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.reactivex.Scheduler;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RxJavaModule_ProvideSubscriberOnFactory implements Factory<Scheduler> {
  private final RxJavaModule module;

  public RxJavaModule_ProvideSubscriberOnFactory(RxJavaModule module) {
    this.module = module;
  }

  @Override
  public Scheduler get() {
    return provideSubscriberOn(module);
  }

  public static RxJavaModule_ProvideSubscriberOnFactory create(RxJavaModule module) {
    return new RxJavaModule_ProvideSubscriberOnFactory(module);
  }

  public static Scheduler provideSubscriberOn(RxJavaModule instance) {
    return Preconditions.checkNotNull(instance.provideSubscriberOn(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
