// Generated by Dagger (https://dagger.dev).
package com.bapidas.news.ui.base.viewmodel.factory;

import com.bapidas.news.ui.base.viewmodel.BaseActivityViewModel;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityViewModelFactory_Factory implements Factory<ActivityViewModelFactory> {
  private final Provider<Map<Class<? extends BaseActivityViewModel>, Provider<BaseActivityViewModel>>> creatorsProvider;

  public ActivityViewModelFactory_Factory(
      Provider<Map<Class<? extends BaseActivityViewModel>, Provider<BaseActivityViewModel>>> creatorsProvider) {
    this.creatorsProvider = creatorsProvider;
  }

  @Override
  public ActivityViewModelFactory get() {
    return newInstance(creatorsProvider.get());
  }

  public static ActivityViewModelFactory_Factory create(
      Provider<Map<Class<? extends BaseActivityViewModel>, Provider<BaseActivityViewModel>>> creatorsProvider) {
    return new ActivityViewModelFactory_Factory(creatorsProvider);
  }

  public static ActivityViewModelFactory newInstance(
      Map<Class<? extends BaseActivityViewModel>, Provider<BaseActivityViewModel>> creators) {
    return new ActivityViewModelFactory(creators);
  }
}
