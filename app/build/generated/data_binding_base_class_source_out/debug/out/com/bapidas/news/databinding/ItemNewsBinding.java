// Generated by data binding compiler. Do not edit!
package com.bapidas.news.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.bapidas.news.R;
import com.bapidas.news.ui.base.adapter.callback.ItemViewListener;
import com.bapidas.news.ui.model.Article;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemNewsBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardNews;

  @NonNull
  public final ImageView imgBg;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvSource;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final View view;

  @Bindable
  protected Article mItem;

  @Bindable
  protected ItemViewListener mCallback;

  protected ItemNewsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardNews, ImageView imgBg, TextView tvDate, TextView tvSource, TextView tvTitle,
      View view) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardNews = cardNews;
    this.imgBg = imgBg;
    this.tvDate = tvDate;
    this.tvSource = tvSource;
    this.tvTitle = tvTitle;
    this.view = view;
  }

  public abstract void setItem(@Nullable Article item);

  @Nullable
  public Article getItem() {
    return mItem;
  }

  public abstract void setCallback(@Nullable ItemViewListener callback);

  @Nullable
  public ItemViewListener getCallback() {
    return mCallback;
  }

  @NonNull
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_news, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemNewsBinding>inflateInternal(inflater, R.layout.item_news, root, attachToRoot, component);
  }

  @NonNull
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_news, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemNewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemNewsBinding>inflateInternal(inflater, R.layout.item_news, null, false, component);
  }

  public static ItemNewsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemNewsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemNewsBinding)bind(component, view, R.layout.item_news);
  }
}
